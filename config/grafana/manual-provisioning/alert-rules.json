{
    "load-testing": [
      {
        "name": "HTTP failures - Host: $host",
        "interval": "6h",
        "rules": [
          {
            "for": "12h",
            "annotations": {
              "__dashboardUid__": "G-gAEtpnk",
              "__panelId__": "2",
              "summary": "Last 24h there have been failures in the perfomance tests running on  host 49.12.163.186"
            },
            "grafana_alert": {
              "id": 3,
              "orgId": 1,
              "title": "HTTP failures - Host: 49.12.163.186",
              "condition": "B",
              "data": [
                {
                  "refId": "A",
                  "queryType": "randomWalk",
                  "relativeTimeRange": {
                    "from": 86400,
                    "to": 0
                  },
                  "datasourceUid": "P4D1D31A5B69203FF",
                  "model": {
                    "datasource": {
                      "type": "influxdb",
                      "uid": "P4D1D31A5B69203FF"
                    },
                    "groupBy": [
                      {
                        "params": [
                          "1h"
                        ],
                        "type": "time"
                      },
                      {
                        "params": [
                          "test_id"
                        ],
                        "type": "tag"
                      },
                      {
                        "params": [
                          "none"
                        ],
                        "type": "fill"
                      }
                    ],
                    "hide": false,
                    "intervalMs": 1000,
                    "maxDataPoints": 43200,
                    "measurement": "iteration_duration",
                    "orderByTime": "ASC",
                    "policy": "default",
                    "query": "SELECT sum(\"value\")  FROM \"http_req_failed\" WHERE value=1 AND (\"cloud_host\" =~ /^https:\\/\\/49\\.12\\.163\\.186:9200$/ AND \"test_id\" =~ /^(most-used-sizes-upload|propfind-deep|propfind-deep-rename|propfind-flat|share-with-new-user|upload-download-delete-many-large|upload-download-delete-many-small|upload-download-delete-with-new-user)$/) AND time >= now() - 1d AND time <= now()  GROUP BY time(1h), test_id fill(0)\n",
                    "queryType": "randomWalk",
                    "rawQuery": true,
                    "refId": "A",
                    "resultFormat": "table",
                    "select": [
                      [
                        {
                          "params": [
                            "value"
                          ],
                          "type": "field"
                        },
                        {
                          "params": [],
                          "type": "mean"
                        },
                        {
                          "params": [
                            " / 1000"
                          ],
                          "type": "math"
                        }
                      ]
                    ],
                    "tags": [
                      {
                        "key": "test_id",
                        "operator": "=~",
                        "value": "/^(most-used-sizes-upload|propfind-deep|propfind-deep-rename|propfind-flat|share-with-new-user|upload-download-delete-many-large|upload-download-delete-many-small|upload-download-delete-with-new-user)$/"
                      }
                    ]
                  }
                },
                {
                  "refId": "B",
                  "queryType": "",
                  "relativeTimeRange": {
                    "from": 0,
                    "to": 0
                  },
                  "datasourceUid": "-100",
                  "model": {
                    "conditions": [
                      {
                        "evaluator": {
                          "params": [
                            0
                          ],
                          "type": "gt"
                        },
                        "operator": {
                          "type": "when"
                        },
                        "query": {
                          "params": [
                            "A"
                          ]
                        },
                        "reducer": {
                          "params": [],
                          "type": "sum"
                        },
                        "type": "query"
                      }
                    ],
                    "datasource": {
                      "type": "grafana-expression",
                      "uid": "-100"
                    },
                    "downsampler": "mean",
                    "hide": false,
                    "intervalMs": 1000,
                    "maxDataPoints": 43200,
                    "refId": "B",
                    "type": "classic_conditions",
                    "upsampler": "fillna"
                  }
                }
              ]
            }
          }
        ]
      },
      {
        "name": "HTTP failures - Host: 49.12.163.166",
        "interval": "6h",
        "rules": [
          {
            "expr": "",
            "for": "12h",
            "annotations": {
              "__dashboardUid__": "G-gAEtpnk",
              "__panelId__": "2",
              "summary": "Last 24h there have been failures in the performance tests running on  host 49.12.163.166"
            },
            "grafana_alert": {
              "id": 4,
              "orgId": 1,
              "title": "HTTP failures - Host: 49.12.163.166",
              "condition": "B",
              "data": [
                {
                  "refId": "A",
                  "queryType": "randomWalk",
                  "relativeTimeRange": {
                    "from": 4578311,
                    "to": 4576911
                  },
                  "datasourceUid": "P4D1D31A5B69203FF",
                  "model": {
                    "datasource": {
                      "type": "influxdb",
                      "uid": "P4D1D31A5B69203FF"
                    },
                    "groupBy": [
                      {
                        "params": [
                          "1h"
                        ],
                        "type": "time"
                      },
                      {
                        "params": [
                          "test_id"
                        ],
                        "type": "tag"
                      },
                      {
                        "params": [
                          "none"
                        ],
                        "type": "fill"
                      }
                    ],
                    "hide": false,
                    "intervalMs": 1000,
                    "maxDataPoints": 43200,
                    "measurement": "iteration_duration",
                    "orderByTime": "ASC",
                    "policy": "default",
                    "query": "SELECT sum(\"value\")  FROM \"http_req_failed\" WHERE value=1 AND (\"cloud_host\" =~ /^https:\\/\\/49\\.12\\.163\\.166:9200$/ AND \"test_id\" =~ /^(most-used-sizes-upload|propfind-deep|propfind-deep-rename|propfind-flat|share-with-new-user|upload-download-delete-many-large|upload-download-delete-many-small|upload-download-delete-with-new-user)$/) AND time >= now() - 1d AND time <= now()  GROUP BY time(1h), test_id fill(0)",
                    "queryType": "randomWalk",
                    "rawQuery": true,
                    "refId": "A",
                    "resultFormat": "time_series",
                    "select": [
                      [
                        {
                          "params": [
                            "value"
                          ],
                          "type": "field"
                        },
                        {
                          "params": [],
                          "type": "mean"
                        },
                        {
                          "params": [
                            " / 1000"
                          ],
                          "type": "math"
                        }
                      ]
                    ],
                    "tags": [
                      {
                        "key": "test_id",
                        "operator": "=~",
                        "value": "/^(most-used-sizes-upload|propfind-deep|propfind-deep-rename|propfind-flat|share-with-new-user|upload-download-delete-many-large|upload-download-delete-many-small|upload-download-delete-with-new-user)$/"
                      }
                    ]
                  }
                },
                {
                  "refId": "B",
                  "queryType": "",
                  "relativeTimeRange": {
                    "from": 0,
                    "to": 0
                  },
                  "datasourceUid": "-100",
                  "model": {
                    "conditions": [
                      {
                        "evaluator": {
                          "params": [
                            0
                          ],
                          "type": "gt"
                        },
                        "operator": {
                          "type": "and"
                        },
                        "query": {
                          "params": [
                            "A"
                          ]
                        },
                        "reducer": {
                          "params": [],
                          "type": "sum"
                        },
                        "type": "query"
                      }
                    ],
                    "datasource": {
                      "type": "grafana-expression",
                      "uid": "-100"
                    },
                    "hide": false,
                    "intervalMs": 1000,
                    "maxDataPoints": 43200,
                    "refId": "B",
                    "type": "classic_conditions"
                  }
                }
              ]
            }
          }
        ]
      }
    ]
  }